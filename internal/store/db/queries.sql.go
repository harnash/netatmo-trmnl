// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: queries.sql

package db

import (
	"context"
)

const getConfigValue = `-- name: GetConfigValue :one
SELECT value FROM config WHERE key = ?
`

func (q *Queries) GetConfigValue(ctx context.Context, key string) (string, error) {
	row := q.db.QueryRowContext(ctx, getConfigValue, key)
	var value string
	err := row.Scan(&value)
	return value, err
}

const setConfigValue = `-- name: SetConfigValue :exec
INSERT INTO config (key, value) VALUES (?, ?) ON CONFLICT(key) DO UPDATE SET value=value
`

type SetConfigValueParams struct {
	Key   string
	Value string
}

func (q *Queries) SetConfigValue(ctx context.Context, arg SetConfigValueParams) error {
	_, err := q.db.ExecContext(ctx, setConfigValue, arg.Key, arg.Value)
	return err
}
